package sintactico;

import java_cup.runtime.Symbol;

parser code {: /* Retorno del símbolo que se está realizando */
    private Symbol s;
    
    public void syntax_error(Symbol s){
        this.s = s;}

    public Symbol getS(){
        return this.s();}
:};

terminal NUMERO, DECIMAL, SUMA, RESTA, MULT, DIV, P_A, P_C, SQRT, PORCENTAJE, IGUAL, ESPACIO, LINEA, ERROR;
non terminal INICIO, SUMAS, RESTAS, MULTS, DIVS, PORCENTAJES, UNARY, ENTRE, SQRTS;

precedence left SUMA, RESTA;
precedence left MULT, DIV;
precedence left UNARY;

start with INICIO;

INICIO ::= NUMERO SUMAS NUMERO | NUMERO SUMAS NUMERO RESTAS NUMERO | NUMERO SUMAS NUMERO SUMAS NUMERO | NUMERO SUMAS NUMERO MULTS NUMERO | NUMERO SUMAS NUMERO DIVS NUMERO
        |NUMERO RESTAS NUMERO | NUMERO RESTAS NUMERO SUMAS NUMERO | NUMERO RESTAS NUMERO RESTAS NUMERO | NUMERO RESTAS NUMERO MULTS NUMERO | NUMERO RESTAS NUMERO DIVS NUMERO
        |NUMERO MULTS NUMERO | NUMERO MULTS NUMERO SUMAS NUMERO | NUMERO MULTS NUMERO MULTS NUMERO | NUMERO MULTS NUMERO RESTAS NUMERO | NUMERO MULTS NUMERO DIVS NUMERO
        |NUMERO DIVS NUMERO | NUMERO DIVS NUMERO SUMAS NUMERO | NUMERO DIVS NUMERO DIVS NUMERO | NUMERO DIVS NUMERO MULTS NUMERO | NUMERO DIVS NUMERO RESTAS NUMERO
        |NUMERO PORCENTAJES NUMERO
        |SQRT NUMERO
        |ENTRE;

SUMAS ::= SUMA;

RESTAS ::= RESTA;

MULTS ::= MULT;

ENTRE ::= P_A NUMERO P_C P_A NUMERO P_C
        |P_A NUMERO SUMA NUMERO P_C
        |P_A NUMERO RESTA NUMERO P_C
        |P_A NUMERO DIV NUMERO P_C
        |P_A NUMERO PORCENTAJE P_C
        |P_A SQRT NUMERO P_C;

DIVS ::= DIV;

PORCENTAJES ::= PORCENTAJE;

SQRTS ::= SQRT;